<%= render  partial: 'exam_management_left' %>
<% navigation_add 'Examination Marks List', exam_management_examination_marks_sheet_details_path %>

<%# navigation_add 'evaluation', inventory_inventory_sales_index_path %>
<%# navigation_add '', inventory_inventory_sales_path %>



<h4 class="mg-h4"><%= t('Examination Evaluation')%></h4>
<div class="box">
<%= form_for :examination_evaluation_details_data ,  :url=>{:controller=>'exam_management',:action=>'examination_marks_entry_update',:id=>@marks_data_edit.id}, :html=>{:id=>'evaluation_details_validations_edit_data'} do |f| %>

    
        <table class="mg-tbl-margin mg-show-tbl-width">
    <tr>
      <td class="mg-td-width-one-third">
      <label class="mg-label"><%= t ('examination_name') %><span class="required-field">&nbsp;*</span></label><br/>
             <% examination_detail=MgExaminationDetail.find_by(:id=>@marks_data_edit.mg_examination_detail_id)
             wing_data=MgWing.find_by(:id=>@marks_data_edit.mg_wing_id)
             course_data=MgCourse.find_by(:id=>@marks_data_edit.mg_course_id)
        subject_data=MgSubject.find_by(:id=>@marks_data_edit.mg_subject_id)

             %>

      <p>
      <%= text_field_tag 'mg_examination_detail_id',examination_detail.name,:readonly=>true,:class=>"mg-text-field"%>
      </p>
      </td>
    </tr>

    <tr>
      <td class="mg-td-width-one-third">
        <label class="mg-label mg-label-text-transform-none" for="dateofPurchase"><%= t ('date_of_evaluation') %><span class="required-field">&nbsp;*</span></label><br/>
        <p>
         <%@timeformat=MgSchool.find(session[:current_user_school_id])%>
     
      <% evaluation_date=@marks_data_edit.date_of_marks_entry.strftime(@timeformat.date_format) %>
        <%= f.text_field :date_of_evaluation ,:value=>evaluation_date,:class=>"mg-text-field datefield date_of_marks_entry"%>
        </p>
      </td>
    </tr>

    <tr>
      <td class="mg-td-width-one-third">
        <label class="mg-label mg-label-text-transform-none" for="dateofPurchase"><%= t ('programme') %><span class="required-field">&nbsp;*</span></label><br/>
        <p class="demo34567">
       <%= text_field_tag 'mg_examination_detail_id',wing_data.wing_name,:readonly=>true,:class=>"mg-text-field"%>
        </p>
      </td>
    </tr>
     <tr>
      <td class="mg-td-width-one-third">
        <label class="mg-label mg-label-text-transform-none" for="dateofPurchase"><%= t ('semester') %><span class="required-field">&nbsp;*</span></label><br/>
        <p id="demos4567">
        <%= text_field_tag 'mg_examination_detail_id',course_data.course_name,:readonly=>true,:class=>"mg-text-field"%>
        </p>
      </td>
    </tr>
     <tr>
      <td class="mg-td-width-one-third">
        <label class="mg-label mg-label-text-transform-none" for="dateofPurchase"><%= t ('subject') %><span class="required-field">&nbsp;*</span></label><br/>
        <p id="demos4567">
        <%= text_field_tag 'mg_examination_detail_id',subject_data.subject_name,:readonly=>true,:class=>"mg-text-field"%>
        </p>
      </td>
    </tr>
     <tr>
      <td class="mg-td-width-one-third">
        <label class="mg-label mg-label-text-transform-none" for="dateofPurchase"><%= t ('max_marks') %><span class="required-field">&nbsp;*</span></label><br/>
        <p id="demos4567">
        <%= text_field_tag 'mg_marks_details',@marks_data_edit.max_marks,:readonly=>true,:class=>"mg-text-field"%>
        </p>
      </td>
    </tr>
    </table>
    <table border="1" class="mg-showdata-bg" cellspacing="1" cellpadding="1">
<h4 class="mg-h4"><%=t('enter_marks')%></h4>
<tr>
    <th><%=t('student_id')%></th>

    <th><%=t('student_name')%></th>
    <th><%=t('marks_obtained')%></th>
    <!-- <th><%#=t('grade')%></th> -->

</tr>


<%@student_marks_data.each do |student|%>
<tr>
<%=hidden_field_tag 'orginal_id[]',student.id,:class=>"mg-marks-width",:readonly=>true%></td>

<%student_data=MgStudent.find_by(:id=>student.mg_student_id)%>
<td class="one" valign="top"><%=student_data.admission_number%>

<td class="two" valign="top"><%="#{student_data.first_name.to_s.try(:capitalize)} #{student_data.last_name.to_s.try(:capitalize)}"%>

<%=hidden_field_tag 'student_id[]',student_data.id,:class=>"mg-marks-width",:readonly=>true%></td>
<td class="three" valign="top"><%=text_field_tag "marks_obtained[#{student_data.id}]",student.marks_obtained,:class=>" max_marks_text_field_cls mg-marks-width marksObtainedData"%></td>
<%#grading_level_data=MgGradingLevel.find_by(:id=>student.mg_grading_level_id)%>
 <!-- <td class="mg-td-width-half two" valign="top"><%#=text_field_tag 'grades[]',grading_level_data.name,:class=>"mg-marks-width",:readonly=>true%>
 
<%#=hidden_field_tag 'grades_id[]',student.mg_grading_level_id,:class=>"mg-marks-width",:readonly=>true%></td> -->
</tr>

<%end%>
</table>
    <div class="examination_data_for_details">
    </div><br/>
    <a onclick="$(this).closest('form').submit()" class="mg-small-form-btn"><%=t("Submit")%></a>

<%= link_to t('cancel'), :back, {:class=>"mg-small-form-btn cancel-form-dialog"} %>
    <%end%>
<%= render  partial: 'application/common_left_close' %>

    <script>


    $(document).ready(function () {
            focusCurrentTab("examination_marks_sheet_detailsAID","examination_marks_sheet_detailsLiID");




dateFormatStr =  getJsDateFormat();

    $('.date_of_marks_entry').datepicker({ changeMonth: true,
                changeYear: true,yearRange: "-50:+0",maxDate: "0",dateFormat: dateFormatStr});

    $("#evaluation_details_validations_edit_data").validate({

    rules: {
    "examination_evaluation_details_data[date_of_evaluation]": {required: true,dateFormat: true},
    "mg_examination_detail_id": {required: true},
    "mg_examination_wing_id[]": {required: true},
    "mg_examination_wing_id[]": {required: true},
    "mg_subject_id": {required: true}

    }
    });
    $.validator.addClassRules("max_marks_text_field_cls", {required: true, number: true, min: 0,max:parseInt($("#mg_marks_details").val())});
    });

    
    function examinationDetailData(data)
{
  
var urlLink="/exam_management/examination_details_for_program/"
$.ajax({ 
               url: urlLink,  
               cache: false,
               data:{"id":data},
               success: function(data){
               
                  $(".demo34567").empty().append(data);

                  //temp.append(data);
                }
           });

}
$(function () {
    $.validator.addMethod('dateFormat',
    function (value, element) {
      dateFormatStr =  getJsDateFormat();
        if (this.optional(element)) {
            return true;
        }
        var ok = true;
        try {
            $.datepicker.parseDate(dateFormatStr, value);
        }
        catch (err) {
            ok = false;
        }
        return ok;
    },


      "Please enter a date in the format "+ getDateFormat(dateFormatStr) +".");
      dateFormatStr =  getJsDateFormat();

    $(".datefield").datepicker({ dateFormat: dateFormatStr, changeYear: true });
});
function selectCourseForProgramDataExamination(data,that)
{
 // var temp =$(that).parent('.resource-category-td-class').siblings(".resource-type-td-class");


var urlLink="/exam_management/examination_details_for_course/"
$.ajax({ 
               url: urlLink,  
               cache: false,
               data:{"id":data},
               success: function(data){
                //$(that).parents('td').siblings(".resource-category-td-class").html(data);
                  $("#demos4567").empty().append(data);
                  //temp.append(data);
                }
           });


}

function selectSubjectForExamination(data,that){
 

var urlLink="/exam_management/examination_marks_details_for_subject/"
$.ajax({ 
               url: urlLink,  
               cache: false,
               data:{"id":data},
               success: function(data){
                //$(that).parents('td').siblings(".resource-category-td-class").html(data);
                  $(".examination_data_for_details").empty().append(data);
                  //temp.append(data);
                }
           });

}

function selectMarksFordataSubjects(data){
var urlLink="/exam_management/examination_marks_entry_for_subject_marks/"

var value=$("#mg_examination_detail_id").val();
$.ajax({ 
               url: urlLink,  
               cache: false,
               data:{"id":data,"exam_id":value},
               success: function(data){
                //$(that).parents('td').siblings(".resource-category-td-class").html(data);
                  $("#subject_marks_in_examination").empty().append(data);
                  //temp.append(data);
                }
           });
}

function setExaminationGradeFromMarks(marksObj,batch_id){
    var marks = marksObj.value;

    if(marks!=""){

       var batchId=$("#examResultEntryBatchId").val(); 
       //alert("Shr "+batchId);

       var urlLink="/examination/setGradeFromMarks/";

       $.ajax({
            url: urlLink ,
            //type:json
            cache: false,
            data:
            {
                 marks:marks,
                 batchId:batch_id

             },
            success: function(data){  
                
                     console.log($(marksObj).parent().next().children()[1]);
               
              

               $(marksObj).parent().next().children()[0].value=data.gradeLevel;
               $(marksObj).parent().next().children()[1].value=data.gradeLevelId;
             
            }
        });
    }
    
}

//document.on("change","mg_examination_wing_id",function(){
    </script>