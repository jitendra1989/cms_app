c
bill_object.balance_amount.to_i
c
@specialization.save
@specialization=MgSpecialization.new(params_specialization)
params[:specialization][:mg_school_id]
params[:specialization][:specialization]
params
c
@employee.update(employees_params)
employees_params
@employee
@employee.update(employees_params)
@employee
@employee.update(employees_params)
employees_params[:status]
params[:status]
employees_params
c
session[:current_user_school_id]
@dbdatas = MgCommonCustomField.where(:model_name=> "guardian", :is_deleted=> 0,:mg_school_id=>session[:current_user_school_id])session[:current_user_school_id]
@dbdatas = MgCommonCustomField.where(:model_name=> "guardian", :is_deleted=> 0,:mg_school_id=>session[:current_user_school_id])
@dbdatas = MgCommonCustomField.where(:model_name=> "guardian", :is_deleted=>0)
@dbdatas = MgCommonCustomField.where(:model_name=> "guardian", :is_deleted=> 0,:mg_school_id=>session[:current_user_school_id])
c
@customfields.update(custom_field_params)
@customfields = MgCommonCustomField.find(params[:id])
params
custom_field_params
c
params[:select_data]
params
c
start_date<=today
today>start_date
start_date=@polling_option.start_date
today=Date.today
today
Date.today
@polling_option.start_date
@polling_option.start_date.strftime(@timeformat.date_format)
@polling_option.start_date.strftime(date_format(@timeformat.date_format))
yesterday = Date.new(@polling_option.start_date)
@polling_option.start_date
Date.strptime(@polling_option.start_date,@timeformat.date_format)
@polling_option.start_date.inspect
@polling_option.start_date
Date.strptime(today,@timeformat.date_format)
@timeformat.date_format
today.strftime(@timeformat.date_format)
today.to_date
today
todaynew = Date.new(today)
today
todaynew = Date.new(09/05/16)
todaynew = Date.new("09/05/16")
today
todaynew = Date.new(today)
start_date=@polling_option.start_date.strftime(@timeformat.date_format)
today = Date.today.strftime(@timeformat.date_format)
Date.today.strftime(@timeformat.date_format)
@polling_option.start_date.strftime(@timeformat.date_format)
@timeformat = MgSchool.find(session[:current_user_school_id])
c
Date.today
@polling_option.start_date
@polling_option
c
programme_id
session[:current_user_school_id]
@program_obj = MgAlumniProgrammeAttended.find_by(:id=>programme_id,:is_deleted=>0,:mg_school_id=>session[:current_user_school_id])
programme_id
c
params[:mg_specialization_id][key]
params[:mg_specialization_id]["33"]
params[:mg_specialization_id][33]
params[:mg_specialization_id]
key
params
c
fileupload.save
fileupload.file=params[:files][key]
fileupload=MgDocumentManagement.new()
params[:files][key]
>params[:files][key]
@document.update_all(:file=>params[:files][key],:is_deleted=>0,:updated_by=>session[:user_id])
c
params[:files].present?
params[:files]
c
programme_id
@document
c
params[:files][key]
@document.update_all(:file=>params[:files][key],:is_deleted=>0,:updated_by=>session[:user_id])
@document.update(:file=>params[:files][key],:is_deleted=>0,:updated_by=>session[:user_id])
params[:files][key]
params[:files]
params[:files][key]
@document
c
cc
n
@programs_value.update(:mg_wing_id=>value,:time_table_year=>params[:time_table_year][key],:mg_employee_specialization_id=>params[:mg_specialization_id][key],:is_deleted=>0,:updated_by=>session[:user_id],:mg_school_id=>session[:current_user_school_id])
@programs_value.update(:mg_wing_id=>value,:time_table_year=>params[:time_table_year][key],:mg_specialization_id=>params[:mg_specialization_id][key],:is_deleted=>0,:updated_by=>session[:user_id],:mg_school_id=>session[:current_user_school_id])
params[:mg_specialization_id][key]
params[:mg_specialization_id][key.to_s]
params[:mg_specialization_id][key]
key
params[:mg_specialization_id]
@programs_value.update(:mg_wing_id=>value,:time_table_year=>params[:time_table_year][key],:mg_specialization_id=>params[:mg_specialization_id][key],:is_deleted=>0,:updated_by=>session[:user_id],:mg_school_id=>session[:current_user_school_id])
@programs_value
c
student_user_id
params
params[:allergy]
new_allergy.mg_student_id=params[:allergy][:mg_student_id]
new_allergy.mg_batch_id=params[:allergy][:mg_batch_id]
new_allergy.medication_detail=params[:newmedication_detail][key.to_s]
new_allergy.status=params[:newstatus][key.to_s]
new_allergy.description=params[:newdescription][key.to_s]
new_allergy.name=val
new_allergy=MgAllergy.new()
c
params[:newname]
new_allergy.name=val
          new_allergy.name=val
new_allergy=MgAllergy.new()
params[:newname].present?
c
@action.present?
if @action.present?
if @action.present
@action
c
params
params[:action_url]
params[:action_url].present?
c
params[:allergy_for]=="employee"
params[:allergy_for]
c
@myallergy
c
@allergy
params
c
params
new_allergy.mg_batch_id=params[:allergy][:mg_batch_id]
new_allergy.medication_detail=params[:newmedication_detail][key.to_s]
new_allergy.status=params[:newstatus][key.to_s]
new_allergy.description=params[:newdescription][key.to_s]
new_allergy.name=val
new_allergy=MgAllergy.new()
c
params[:newname][35.to_s]
params[:newname]["35"]
params[:newname][35]
params[:newname]
params[:newname]["35"]
params[:newname][:35]
params[:newname]["35"]
params[:newname][35]
params[:newname]
params[:newname].each do |key,val|
params[:newname]
params[:newname].present?
params[:name]
params[:name].present?
c
params[:description][key]
params[:description]
params[:description][key.to_i]
key
params[:description]["key"]
params[:description]["32"]
params[:description][32]
params[:description]
params
params[:description][:key]
val
@allergy_obj.update(:mg_school_id=>session[:current_user_school_id],:name=>val,:description=>params[:description][:key],:status=>params[:status][:key],:medication_detail=>params[:medication_detail][:key],:is_deleted=>0,:updated_by=>session[:user_id])
@allergy_obj= MgAllergy.find_by(:id=>key,:mg_school_id=>session[:current_user_school_id])
c
MgAllergy.find_by(:id=>key,:mg_school_id=>session[:current_user_school_id]).update(:mg_school_id=>session[:current_user_school_id],:name=>val,:description=>params[:description][:key],:status=>params[:status][:key],:medication_detail=>params[:medication_detail][:key],:is_deleted=>0,:updated_by=>session[:user_id])
MgAllergy.find_by(:id=>indexm,:mg_school_id=>session[:current_user_school_id]).update(:mg_school_id=>session[:current_user_school_id],:name=>val,:description=>params[:description][:key],:status=>params[:status][:key],:medication_detail=>params[:medication_detail][:key],:is_deleted=>0,:updated_by=>session[:user_id])
MgAllergy.find_by(:id=>indexm,:mg_school_id=>session[:current_user_school_id]).update(:mg_school_id=>session[:current_user_school_id],:name=>val,:description=>params[:description][:index],:status=>params[:status][:index],:medication_detail=>params[:medication_detail][:index],:is_deleted=>0,:updated_by=>session[:user_id])
            :name=>val,:description=>params[:description][:index],:status=>params[:status][:index],:medication_detail=>params[:medication_detail][:index],:is_deleted=>0,:updated_by=>session[:user_id])
MgAllergy.find_by(:id=>indexm,:mg_school_id=>session[:current_user_school_id]).update(:mg_school_id=>session[:current_user_school_id],
val
key
c
index
c
params
val
index
c
params
@params.size-1
name_arr.size
name_arr
status_arr
name_arr
@params=params[:ids]
c
health_test_history=MgHealthTest.where('mg_check_up_type_id=? and mg_student_id=? and mg_batch_id=? and  is_deleted=? and mg_school_id=? and  mg_check_up_schedule_id NOT IN (?)',params[:check_type_id],params[:mg_student_id],params[:mg_batch_id],0,session[:current_user_school_id],params[:mg_check_up_schedule_id]).order('mg_check_up_schedule_id DESC').uniq.pluck(:mg_check_up_schedule_id)
health_test_history=MgHealthTest.where('mg_check_up_type_id=? and mg_student_id=? and mg_batch_id=? and  is_deleted=? and mg_school_id=? and  mg_check_up_schedule_id NOT IN (?)',params[:check_type_id],params[:mg_student_id],params[:mg_batch_id],0,session[:current_user_school_id],params[:mg_check_up_schedule_id]).order('mg_checku_up_schedule_id DESC').uniq.pluck(:mg_check_up_schedule_id)
health_test_history=MgHealthTest.where('mg_check_up_type_id=? and mg_student_id=? and mg_batch_id=? and  is_deleted=? and mg_school_id=? and  mg_check_up_schedule_id NOT IN (?)',params[:check_type_id],params[:mg_student_id],params[:mg_batch_id],0,session[:current_user_school_id],params[:mg_check_up_schedule_id]).order('id DESC').uniq.pluck(:mg_check_up_schedule_id)
health_test_history=MgHealthTest.where('mg_check_up_type_id=? and mg_student_id=? and mg_batch_id=? and  is_deleted=? and mg_school_id=? and  mg_check_up_schedule_id NOT IN (?)',params[:check_type_id],params[:mg_student_id],params[:mg_batch_id],0,session[:current_user_school_id],params[:mg_check_up_schedule_id]).uniq.pluck(:mg_check_up_schedule_id)
@health_test_history
c
schedule_date.date
schedule_date=MgCheckUpSchedule.find_by(:id=>25,:is_deleted=>0,:mg_school_id=>session[:current_user_school_id])
c
schedule_date.date
schedule_date
schedule_date.length
schedule_date.count
schedule_date
schedule_date=MgCheckUpSchedule.find_by(:id=>schedule_id,:is_deleted=>0,:mg_school_id=>session[:current_user_school_id])
schedule_id
c
student_obj=MgStudent.where(:mg_user_id=>user_obj.id,:is_deleted=>0,:mg_school_id=>session[:current_user_school_id])
user_obj.user_type
c
employee_obj
user_obj.user_type
if user_obj.user_type=='student'
user_obj
  <>
c
user_obj.user_type
user_obj
c
vaccinations_details_params
c
@health_test_history=MgHealthTest.where('mg_check_up_type_id=? and mg_student_id=? and mg_batch_id=? and  is_deleted=? and mg_school_id=? and  mg_check_up_schedule_id NOT IN (?)',params[:check_type_id],params[:mg_student_id],params[:mg_batch_id],0,session[:current_user_school_id],90).uniq.pluck(:mg_check_up_schedule_id)
@health_test_history=MgHealthTest.where('mg_check_up_type_id=? and mg_student_id=? and mg_batch_id=? and  is_deleted=? and mg_school_id=? and  mg_check_up_schedule_id NOT IN (?)',params[:check_type_id],params[:mg_student_id],params[:mg_batch_id],0,session[:current_user_school_id],params[:mg_check_up_schedule_id]).uniq.pluck(:mg_check_up_schedule_id)
@health_test_history=MgHealthTest.where('mg_check_up_type_id=? and mg_student_id=? and mg_batch_id=? and  is_deleted=? and mg_school_id=? and  mg_check_up_schedule_id NOT IN (?)',params[:check_type_id],params[:mg_student_id],params[:mg_batch_id],0,session[:current_user_school_id],params[:mg_check_up_schedule_id]).uniq.pluck(:mg_check_up_schedule_id).last(2)
@health_test_history=MgHealthTest.where('mg_check_up_type_id=? and mg_student_id=? and mg_batch_id=? and  is_deleted=? and mg_school_id=? and  mg_check_up_schedule_id NOT IN (?)',arams[:check_type_id],params[:mg_student_id],params[:mg_batch_id],0,session[:current_user_school_id],params[:mg_check_up_schedule_id]).uniq.pluck(:mg_check_up_schedule_id).last(2)
        params[:check_type_id],params[:mg_student_id],params[:mg_batch_id],0,session[:current_user_school_id],params[:mg_check_up_schedule_id]).uniq.pluck(:mg_check_up_schedule_id).last(2)
@health_test_history=MgHealthTest.where('mg_check_up_type_id=? and mg_student_id=? and mg_batch_id=? and  is_deleted=? and mg_school_id=? and  mg_check_up_schedule_id NOT IN (?)',
c
params[:checkup_schedule][:date]
start_date = Date.strptime(params[:checkup_schedule][:date],@timeformat.date_format)
c
a=student_user_id+guardian_user_id
guardian_user_id
student_user_id
c
params[:checkup_schedule][:start_time].strftime("%l:%M%P")
params[:checkup_schedule][:end_time]
params[:checkup_schedule][:start_time]
start_time
c
